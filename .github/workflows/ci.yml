name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  compression_test:
    name: Test Compression
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.9", "3.10", "3.11"]

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pycryptodome
          pip install -e .

      - name: Run compression tests
        env:
          PYTHONPATH: ${{ github.workspace }}
        run: pytest tests/test_compression.py -v

  encrypt_decrypt_test:
    name: Test Encryption/Decryption
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.9", "3.10", "3.11"]

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pycryptodome
          pip install -e .

      - name: Run encryption-decryption tests
        env:
          PYTHONPATH: ${{ github.workspace }}
        run: pytest tests/test_filelock.py -v

  integration_test:
    name: Test Integration
    needs: [compression_test, encrypt_decrypt_test]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.9", "3.10", "3.11"]

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pycryptodome
          pip install -e .

      - name: Run integration tests
        env:
          PYTHONPATH: ${{ github.workspace }}
        run: pytest tests/test_integration.py -v

  docker_test:
    name: Docker Container Tests
    runs-on: ubuntu-latest
    needs: [integration_test]

    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker image
        run: docker build -t filelock-tests .

      - name: Run tests in Docker container
        run: docker run --rm filelock-tests
